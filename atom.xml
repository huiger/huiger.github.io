<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HuiGer的博客</title>
  <subtitle>半城月光半城雾</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huiger.top/"/>
  <updated>2019-11-08T07:13:21.088Z</updated>
  <id>http://huiger.top/</id>
  
  <author>
    <name>huiGer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网易云音乐外链生成最新方法</title>
    <link href="http://huiger.top/2018/08/23/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E5%A4%96%E9%93%BE%E7%94%9F%E6%88%90%E6%9C%80%E6%96%B0%E6%96%B9%E6%B3%95/"/>
    <id>http://huiger.top/2018/08/23/网易云音乐外链生成最新方法/</id>
    <published>2018-08-23T04:32:34.000Z</published>
    <updated>2019-11-08T07:13:21.088Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法："><a href="#网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法：" class="headerlink" title="网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法："></a>网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法：</h3><a id="more"></a>
<ol>
<li>找到你要获得外链的歌曲，用网页版打开，复制链接中的歌曲ID</li>
</ol>
<blockquote>
<p>如：Panama - Matteo<br><a href="http://music.163.com/#/song?id=34229976" target="_blank" rel="noopener">http://music.163.com/#/song?id=34229976</a></p>
</blockquote>
<p>ID就是34229976</p>
<p><img src="http://zhihui123.gitee.io/pic/163music_url.png" alt="网页链接获取id"></p>
<ol start="2">
<li>将ID替换到链接 <a href="http://music.163.com/song/media/outer/url?id=#.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=#.mp3</a> 中<br>(将#换成你的ID)</li>
</ol>
<p>如：<a href="http://music.163.com/song/media/outer/url?id=34229976.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=34229976.mp3</a></p>
<p>复制这个链接 就可以直接通过网页打开纯mp3地址了 添加到下载工具中也可下载 还能添加到QQ空间背景音乐中</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法：&quot;&gt;&lt;a href=&quot;#网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法：&quot; class=&quot;headerlink&quot; title=&quot;网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法：&quot;&gt;&lt;/a&gt;网易云生成外链有点坑，音乐地址都没有，生成外链也不能满足我们这帮瞎扯淡的猿。所有下面就给出了可以获得网易云音乐真实地址的方法：&lt;/h3&gt;
    
    </summary>
    
      <category term="教程" scheme="http://huiger.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://huiger.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>银行卡列表之背景颜色自动识别</title>
    <link href="http://huiger.top/2018/08/23/bitmapGetColor/"/>
    <id>http://huiger.top/2018/08/23/bitmapGetColor/</id>
    <published>2018-08-23T03:10:34.000Z</published>
    <updated>2019-11-08T07:08:54.786Z</updated>
    
    <content type="html"><![CDATA[<p>目前市场是的大部分App, 都具有个人账户功能吧, 那么当然少不了银行卡这个角色. 银行卡列表背景色若设置成统一的单色调, 那多影响美观. 若我们能把银行logo的主色调当成背景, 那逼格瞬间提升百倍呀! </p>
<p><img src="http://zhihui123.gitee.io/pic/bige.jpg" alt=""></p>
<a id="more"></a>
<p>首先我们要读取logo的主色调, 当然得拿到logo. 这里用到了github上的这位大兄弟抓取的数据, <a href="https://github.com/digglife/cnbankcard" target="_blank" rel="noopener">https://github.com/digglife/cnbankcard</a></p>
<p>那logo不可能全部都放到assets中, 多影响app体积. 个人建议放服务器.</p>
<p>说这么多, 先看看效果图吧.</p>
<p><img src="http://zhihui123.gitee.io/pic/%E9%93%B6%E8%A1%8C%E5%8D%A1%E5%88%97%E8%A1%A8.png" alt=""></p>
<p>读取主色调,我这里用到了Palette, Palette其实就是调色板, 能够读取图片的色调, 包含柔和深色的、柔和的明亮、活跃的明亮、活跃的深色…</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><p>你需要在工程下的build.gradle里添加依赖才可以使用Palette，像如下代码所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  compile &apos;com.android.support:palette-v7:27.1.1&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一些api"><a href="#一些api" class="headerlink" title="一些api"></a>一些api</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">传入默认颜色防止Palette无法解析到指定颜色种类</span><br><span class="line"></span><br><span class="line">// 获取到柔和的深色的颜色（可传默认值）</span><br><span class="line"> palette.getDarkMutedColor(Color.BLUE);</span><br><span class="line"> // 获取到活跃的深色的颜色（可传默认值）</span><br><span class="line"> palette.getDarkVibrantColor(Color.BLUE);</span><br><span class="line"> // 获取到柔和的明亮的颜色（可传默认值）</span><br><span class="line"> palette.getLightMutedColor(Color.BLUE);</span><br><span class="line"> // 获取到活跃的明亮的颜色（可传默认值）</span><br><span class="line"> palette.getLightVibrantColor(Color.BLUE);</span><br><span class="line"> // 获取图片中最活跃的颜色（也可以说整个图片出现最多的颜色）（可传默认值）</span><br><span class="line"> palette.getVibrantColor(Color.BLUE);</span><br><span class="line"> // 获取图片中一个最柔和的颜色（可传默认值）</span><br><span class="line"> palette.getMutedColor(Color.BLUE);</span><br><span class="line">// ...  这里省略其他的方法。</span><br></pre></td></tr></table></figure>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>这里我们读取主色调,  什么明亮,柔和的怎么都不是想要的, 所以我这里就取像素点最多的那个色值,<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取图片主色调</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> bitmap</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getBitmapColor</span><span class="params">(<span class="keyword">final</span> Bitmap bitmap, <span class="keyword">final</span> onBitmapGetColorListener listener)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     Palette.from(bitmap).maximumColorCount(<span class="number">10</span>).generate(<span class="keyword">new</span> Palette.PaletteAsyncListener() &#123;</span><br><span class="line">         <span class="meta">@Override</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onGenerated</span><span class="params">(@NonNull Palette palette)</span> </span>&#123;</span><br><span class="line">             List&lt;Palette.Swatch&gt; list = palette.getSwatches();</span><br><span class="line">             <span class="keyword">int</span> colorSize = <span class="number">0</span>;</span><br><span class="line">             Palette.Swatch maxSwatch = <span class="keyword">null</span>;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                 Palette.Swatch swatch = list.get(i);</span><br><span class="line">                 <span class="keyword">if</span> (swatch != <span class="keyword">null</span>) &#123;</span><br><span class="line">                     <span class="keyword">int</span> population = swatch.getPopulation();</span><br><span class="line">                     <span class="keyword">if</span> (colorSize &lt; population) &#123;</span><br><span class="line">                         colorSize = population;</span><br><span class="line">                         maxSwatch = swatch;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (maxSwatch != <span class="keyword">null</span>)</span><br><span class="line">                 listener.getColor(maxSwatch.getRgb());</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>那么到此颜色值获取了,直接设置背景就好了.</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>Palatte还可以和ViewGroup和Fragment搭配使用, 也是非常美观的, 盗个图片</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2625875-1a5ffa9daaeb0192.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/463" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前市场是的大部分App, 都具有个人账户功能吧, 那么当然少不了银行卡这个角色. 银行卡列表背景色若设置成统一的单色调, 那多影响美观. 若我们能把银行logo的主色调当成背景, 那逼格瞬间提升百倍呀! &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://zhihui123.gitee.io/pic/bige.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://huiger.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://huiger.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>android-可移动的标签</title>
    <link href="http://huiger.top/2018/04/28/android-%E5%8F%AF%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%A0%87%E7%AD%BE/"/>
    <id>http://huiger.top/2018/04/28/android-可移动的标签/</id>
    <published>2018-04-28T02:36:50.000Z</published>
    <updated>2019-01-24T16:01:45.673Z</updated>
    
    <content type="html"><![CDATA[<p>虽说可移动的标签没什么难度可言, 但对于些自定义view相对薄弱的来讲, 还是有点意义的, 比如说我.</p>
<p>先看下我这边的效果图吧.</p>
<p><img src="https://github.com/huiger/LabelView/blob/master/img/labelView.gif?raw=true" alt="lableView"></p>
<a id="more"></a>
<p>整个绘制过程相对比较简单.</p>
<h3 id="首先onMessage中测量要具体显示的位置-或者说能显示的大小是多少"><a href="#首先onMessage中测量要具体显示的位置-或者说能显示的大小是多少" class="headerlink" title="首先onMessage中测量要具体显示的位置, 或者说能显示的大小是多少"></a>首先onMessage中测量要具体显示的位置, 或者说能显示的大小是多少</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    <span class="keyword">int</span> width, height;</span><br><span class="line">    <span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">    <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">    <span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line">    <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (widthMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">        width = Math.max(widthSize, mixWidth); <span class="comment">//widthSize &gt; mixWidth ? widthSize : mixWidth;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        width = getPaddingLeft() + mixWidth + getPaddingRight();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (heightMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">        height = Math.max(heightSize, mixHeight);<span class="comment">//heightSize &gt; mixHeight ? heightSize : mixHeight;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        height = getPaddingTop() + mixHeight + getPaddingBottom();</span><br><span class="line">    &#125;</span><br><span class="line">    mCircleY = height / <span class="number">2</span>;</span><br><span class="line">    setMeasuredDimension(width, height);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="绘制细线"><a href="#绘制细线" class="headerlink" title="绘制细线"></a>绘制细线</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制细线</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> canvas</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawLine</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mStrs.length == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    mLinePaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">    reSetPath();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mCircleX &gt; getMeasuredHeight() / <span class="number">2</span>) &#123; <span class="comment">// 原点在右侧, 文字需要在左</span></span><br><span class="line">        asLeft = -<span class="number">1</span>;</span><br><span class="line">        lineStartX = mCircleX - mRadius * <span class="number">0.6f</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        asLeft = <span class="number">1</span>;</span><br><span class="line">        lineStartX = mCircleX + mRadius * <span class="number">0.6f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mStrs.length == <span class="number">1</span>) &#123;</span><br><span class="line">        mPath[<span class="number">0</span>].rLineTo((mTextPaint.measureText(mStrs[<span class="number">0</span>]) + disGap / <span class="number">2</span>) * asLeft + disGap, <span class="number">0</span>);</span><br><span class="line">        canvas.drawPath(mPath[<span class="number">0</span>], mLinePaint);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mStrs.length == <span class="number">2</span>) &#123;</span><br><span class="line">        mPath[<span class="number">0</span>].lineTo(lineStartX + disGap * asLeft, mCircleY - disGap);</span><br><span class="line">        mPath[<span class="number">0</span>].rLineTo((mTextPaint.measureText(mStrs[<span class="number">0</span>]) + disGap / <span class="number">2</span>) * asLeft, <span class="number">0</span>);</span><br><span class="line">        canvas.drawPath(mPath[<span class="number">0</span>], mLinePaint);</span><br><span class="line"></span><br><span class="line">        mPath[<span class="number">1</span>].lineTo(lineStartX + disGap * asLeft, mCircleY + disGap);</span><br><span class="line">        mPath[<span class="number">1</span>].rLineTo((mTextPaint.measureText(mStrs[<span class="number">1</span>]) + disGap / <span class="number">2</span>) * asLeft, <span class="number">0</span>);</span><br><span class="line">        canvas.drawPath(mPath[<span class="number">1</span>], mLinePaint);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mPath[<span class="number">0</span>].lineTo(lineStartX + disGap * asLeft, mCircleY - disGap);</span><br><span class="line">        mPath[<span class="number">0</span>].rLineTo((mTextPaint.measureText(mStrs[<span class="number">0</span>]) + disGap / <span class="number">2</span>) * asLeft, <span class="number">0</span>);</span><br><span class="line">        canvas.drawPath(mPath[<span class="number">0</span>], mLinePaint);</span><br><span class="line"></span><br><span class="line">        mPath[<span class="number">1</span>].rLineTo((mTextPaint.measureText(mStrs[<span class="number">1</span>]) + disGap * <span class="number">1.5f</span>) * asLeft, <span class="number">0</span>);</span><br><span class="line">        canvas.drawPath(mPath[<span class="number">1</span>], mLinePaint);</span><br><span class="line"></span><br><span class="line">        mPath[<span class="number">2</span>].lineTo(lineStartX + disGap * asLeft, mCircleY + disGap);</span><br><span class="line">        mPath[<span class="number">2</span>].rLineTo((mTextPaint.measureText(mStrs[<span class="number">2</span>]) + disGap / <span class="number">2</span>) * asLeft, <span class="number">0</span>);</span><br><span class="line">        canvas.drawPath(mPath[<span class="number">2</span>], mLinePaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="设置文字"><a href="#设置文字" class="headerlink" title="设置文字"></a>设置文字</h3><blockquote>
<p>这里只提供在java代码中设置文字, 个人觉得这样比在xml中更灵活些. 所以提供了可直接设置文字的可变数组(仅支持1-3个文字标签)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置文字</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str 要显示的文字</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(String... str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.length &gt; <span class="number">3</span>) &#123;</span><br><span class="line">        mStrs[<span class="number">0</span>] = str[<span class="number">0</span>];</span><br><span class="line">        mStrs[<span class="number">1</span>] = str[<span class="number">1</span>];</span><br><span class="line">        mStrs[<span class="number">2</span>] = str[<span class="number">2</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.mStrs = str;</span><br><span class="line">    &#125;</span><br><span class="line">    invalidate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="绘制文字"><a href="#绘制文字" class="headerlink" title="绘制文字"></a>绘制文字</h3><blockquote>
<p>刚开始是想直接drawTextonPath, 原点在左, 文字在右,倒是好绘制. 但是反过来, 原点在右,文字在左就不好搞了,最终换成直接绘制文字.</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制文字</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> canvas</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawText</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mStrs.length == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (asLeft &gt; <span class="number">0</span>) &#123;   <span class="comment">// 原点在左侧, 文字需要在右</span></span><br><span class="line">        mTextPaint.setTextAlign(Paint.Align.LEFT);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mTextPaint.setTextAlign(Paint.Align.RIGHT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mStrs.length == <span class="number">1</span>) &#123;</span><br><span class="line">        canvas.drawText(mStrs[<span class="number">0</span>], lineStartX + disGap * asLeft, mCircleY - mLineDisText, mTextPaint);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mStrs.length == <span class="number">2</span>) &#123;</span><br><span class="line">        canvas.drawText(mStrs[<span class="number">0</span>], lineStartX + disGap * asLeft, mCircleY - disGap - mLineDisText, mTextPaint);</span><br><span class="line">        canvas.drawText(mStrs[<span class="number">1</span>], lineStartX + disGap * asLeft, mCircleY + disGap - mLineDisText, mTextPaint);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        canvas.drawText(mStrs[<span class="number">0</span>], lineStartX + disGap * asLeft, mCircleY - disGap - mLineDisText, mTextPaint);</span><br><span class="line">        canvas.drawText(mStrs[<span class="number">1</span>], lineStartX + disGap * asLeft, mCircleY - mLineDisText, mTextPaint);</span><br><span class="line">        canvas.drawText(mStrs[<span class="number">2</span>], lineStartX + disGap * asLeft, mCircleY + disGap - mLineDisText, mTextPaint);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="到此一个普通的带标签的view已经绘制好了-再加些动画就更好看些了"><a href="#到此一个普通的带标签的view已经绘制好了-再加些动画就更好看些了" class="headerlink" title="到此一个普通的带标签的view已经绘制好了, 再加些动画就更好看些了"></a>到此一个普通的带标签的view已经绘制好了, 再加些动画就更好看些了</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化动画</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initAnim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mAnimator = ObjectAnimator.ofFloat(<span class="keyword">this</span>, <span class="string">"progress"</span>, <span class="number">0.6f</span>, <span class="number">1</span>);</span><br><span class="line">    mAnimator.setDuration(<span class="number">1000</span>);</span><br><span class="line">    mAnimator.setInterpolator(<span class="keyword">new</span> AccelerateDecelerateInterpolator());</span><br><span class="line">    <span class="comment">// 无限循环</span></span><br><span class="line">    mAnimator.setRepeatCount(ValueAnimator.INFINITE);</span><br><span class="line">    <span class="comment">// 重复模式, RESTART: 重新开始 REVERSE:恢复初始状态再开始</span></span><br><span class="line">    mAnimator.setRepeatMode(ValueAnimator.REVERSE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="整个过程就是这样-具体详细代码-可前往Github查看全部代码"><a href="#整个过程就是这样-具体详细代码-可前往Github查看全部代码" class="headerlink" title="整个过程就是这样,具体详细代码, 可前往Github查看全部代码"></a>整个过程就是这样,具体详细代码, 可前往<a href="https://github.com/huiger/LabelView" target="_blank" rel="noopener">Github</a>查看全部代码</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽说可移动的标签没什么难度可言, 但对于些自定义view相对薄弱的来讲, 还是有点意义的, 比如说我.&lt;/p&gt;
&lt;p&gt;先看下我这边的效果图吧.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/huiger/LabelView/blob/master/img/labelView.gif?raw=true&quot; alt=&quot;lableView&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="开发经验" scheme="http://huiger.top/categories/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="java" scheme="http://huiger.top/tags/java/"/>
    
      <category term="开发经验" scheme="http://huiger.top/tags/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>java反射, 不看你可别后悔</title>
    <link href="http://huiger.top/2018/04/12/java%E5%8F%8D%E5%B0%84,%20%E4%B8%8D%E7%9C%8B%E4%BD%A0%E5%8F%AF%E5%88%AB%E5%90%8E%E6%82%94/"/>
    <id>http://huiger.top/2018/04/12/java反射, 不看你可别后悔/</id>
    <published>2018-04-12T06:33:50.000Z</published>
    <updated>2019-01-24T16:01:45.674Z</updated>
    
    <content type="html"><![CDATA[<p>开发中, 难免遇到些私有的属性和方法, 就好比下面的实体一样, 我们该怎么获得<code>她</code>, 并玩弄于手掌呢? </p>
<p>我们先来个实体瞧瞧, 给你个对象你也new不了, hahaha… 单身wang</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public class Student &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">    private Student(String name, int age) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    public Student()&#123;</span><br><span class="line">        throw new IllegalAccessError(&quot;就不给你创建&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    private String getName() &#123;</span><br><span class="line">        return name == null ? &quot;&quot; : name;</span><br><span class="line">    &#125;</span><br><span class="line">    private void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    public int getAge() &#123;</span><br><span class="line">        return age;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setAge(int age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;Student&#123;&quot; +</span><br><span class="line">                &quot;name=&apos;&quot; + name + &apos;\&apos;&apos; +</span><br><span class="line">                &quot;, age=&quot; + age +</span><br><span class="line">                &apos;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在反射中如果是私有的, 不管是私有方法, 还是私有属性, 都必须在操作前设置setAccessible为false. 你要不设, 就等着GG呗!</p>
</blockquote>
<h2 id="反射步骤"><a href="#反射步骤" class="headerlink" title="反射步骤"></a>反射步骤</h2><h3 id="1-首先我们要找到要操作的对象"><a href="#1-首先我们要找到要操作的对象" class="headerlink" title="1. 首先我们要找到要操作的对象"></a>1. 首先我们要找到要操作的<code>对象</code></h3><blockquote>
<p>通过Class.forName(“…”), 找到你对象, 里面就写 <code>包名+对象名</code>, 后缀就算了, 谁不知道是个女的啊!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; clz = Class.forName(&quot;top.huiger.Student&quot;);</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="2-找到对象在哪了-但是我们还没找到创建的构造方法是不行的-关于找哪个构造方法-自己选择-自己的对象自己找"><a href="#2-找到对象在哪了-但是我们还没找到创建的构造方法是不行的-关于找哪个构造方法-自己选择-自己的对象自己找" class="headerlink" title="2. 找到对象在哪了, 但是我们还没找到创建的构造方法是不行的, 关于找哪个构造方法, 自己选择, 自己的对象自己找."></a>2. 找到对象在哪了, 但是我们还没找到创建的构造方法是不行的, 关于找哪个构造方法, 自己选择, 自己的对象自己找.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clz.getDeclaredConstructor(String.class, int.class);</span><br></pre></td></tr></table></figure>
<h3 id="3-那我们来创建她-记得上面的找的构造方法是什么-要匹配上才行"><a href="#3-那我们来创建她-记得上面的找的构造方法是什么-要匹配上才行" class="headerlink" title="3.  那我们来创建她, 记得上面的找的构造方法是什么, 要匹配上才行."></a>3.  那我们来创建<code>她</code>, 记得上面的找的构造方法是什么, 要匹配上才行.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object student = constructor.newInstance(&quot;张三&quot;, 18); // 张三还是如花 看你爱好</span><br></pre></td></tr></table></figure>
<h3 id="4-找到对象了-我们来调用下-但是公开的和私有的又有区别"><a href="#4-找到对象了-我们来调用下-但是公开的和私有的又有区别" class="headerlink" title="4. 找到对象了, 我们来调用下, 但是公开的和私有的又有区别"></a>4. 找到对象了, 我们来调用下, 但是公开的和私有的又有区别</h3><ul>
<li><p>公开</p>
<blockquote>
<p>clz.getMethod(“getAge”);</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Method getAge = clz.getMethod(&quot;getAge&quot;);</span><br><span class="line">System.out.println(&quot;--------------&quot; + getAge.invoke(student));</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>私有</p>
<blockquote>
<p>clz.getDeclaredMethod(“getName”);, 上面说过, 私有的都要设置可修改的权限</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method getName = clz.getDeclaredMethod(&quot;getName&quot;);</span><br><span class="line">getName.setAccessible(true);</span><br><span class="line">String name = (String) getName.invoke(student);</span><br><span class="line">System.out.println(&quot;--------------&quot; + name);</span><br></pre></td></tr></table></figure>
<h3 id="5-修改属性-和调用方法类似"><a href="#5-修改属性-和调用方法类似" class="headerlink" title="5. 修改属性, 和调用方法类似"></a>5. 修改属性, 和调用方法类似</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 找到私有属性</span><br><span class="line">Field age = clz.getDeclaredField(&quot;age&quot;);</span><br><span class="line">age.setAccessible(true);</span><br><span class="line">age.setInt(student, 20);   // 修改属性</span><br><span class="line">System.out.println(&quot;--------------&quot;+age.get(student));</span><br></pre></td></tr></table></figure>
<h2 id="全部演练代码都在这"><a href="#全部演练代码都在这" class="headerlink" title="全部演练代码都在这"></a>全部演练代码都在这</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; clz = Class.forName(&quot;top.huiger.Student&quot;);</span><br><span class="line">// 找到带有这个参数的构造方法</span><br><span class="line">Constructor constructor = clz.getDeclaredConstructor(String.class, int.class);</span><br><span class="line">constructor.setAccessible(true);</span><br><span class="line">// 初始化对象</span><br><span class="line">Object student = constructor.newInstance(&quot;张三&quot;, 18);</span><br><span class="line">System.out.println(&quot;--------------&quot;+constructor.toString());</span><br><span class="line"></span><br><span class="line">// 找到该私有方法</span><br><span class="line">Method getName = clz.getDeclaredMethod(&quot;getName&quot;);</span><br><span class="line">getName.setAccessible(true);</span><br><span class="line">String name = (String) getName.invoke(student);</span><br><span class="line">System.out.println(&quot;--------------&quot;+name);</span><br><span class="line"></span><br><span class="line">// 找到私有属性</span><br><span class="line">Field age = clz.getDeclaredField(&quot;age&quot;);</span><br><span class="line">age.setAccessible(true);</span><br><span class="line">age.setInt(student, 20);   // 修改属性</span><br><span class="line">System.out.println(&quot;--------------&quot;+age.get(student));</span><br></pre></td></tr></table></figure>
<p>最后输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--------------private com.dong.wine.Student(java.lang.String,int)</span><br><span class="line">--------------张三</span><br><span class="line">--------------20</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发中, 难免遇到些私有的属性和方法, 就好比下面的实体一样, 我们该怎么获得&lt;code&gt;她&lt;/code&gt;, 并玩弄于手掌呢? &lt;/p&gt;
&lt;p&gt;我们先来个实体瞧瞧, 给你个对象你也new不了, hahaha… 单身wang&lt;/p&gt;
    
    </summary>
    
      <category term="开发经验" scheme="http://huiger.top/categories/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="java" scheme="http://huiger.top/tags/java/"/>
    
      <category term="开发经验" scheme="http://huiger.top/tags/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown - 编辑美化</title>
    <link href="http://huiger.top/2017/05/14/MarkDown-%E7%BC%96%E8%BE%91%E7%BE%8E%E5%8C%96/"/>
    <id>http://huiger.top/2017/05/14/MarkDown-编辑美化/</id>
    <published>2017-05-14T04:27:34.000Z</published>
    <updated>2019-11-08T07:17:27.257Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://zhihui123.gitee.io/pic/markdown.png" alt="MarkDown"><br><a id="more"></a></p>
<h2 id="字体、字号、颜色"><a href="#字体、字号、颜色" class="headerlink" title="字体、字号、颜色"></a>字体、字号、颜色</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>我是黑体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"微软雅黑"</span>&gt;</span>我是微软雅黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"STCAIYUN"</span>&gt;</span>我是华文彩云<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0099ff</span> <span class="attr">size</span>=<span class="string">7</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>color=#0099ff size=72 face="黑体"<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#00ffff</span> <span class="attr">size</span>=<span class="string">72</span>&gt;</span>color=#00ffff<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">gray</span> <span class="attr">size</span>=<span class="string">72</span>&gt;</span>color=gray<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><font face="黑体">我是黑体字</font><br><br><font face="微软雅黑">我是微软雅黑</font><br><br><font face="STCAIYUN">我是华文彩云</font><br><br><font color="#0099ff" size="7" face="黑体">color=#0099ff size=72 face=”黑体”</font><br><br><font color="#00ffff" size="72">color=#00ffff</font><br><br><font color="gray" size="72">color=gray</font>


]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://zhihui123.gitee.io/pic/markdown.png&quot; alt=&quot;MarkDown&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://huiger.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="markdown" scheme="http://huiger.top/tags/markdown/"/>
    
      <category term="教程" scheme="http://huiger.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown - 编辑语法</title>
    <link href="http://huiger.top/2017/03/27/MarkDown-%E7%BC%96%E8%BE%91%E8%AF%AD%E6%B3%95/"/>
    <id>http://huiger.top/2017/03/27/MarkDown-编辑语法/</id>
    <published>2017-03-27T09:27:49.000Z</published>
    <updated>2019-11-08T07:18:28.847Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://zhihui123.gitee.io/pic/markdown.png" alt="MarkDown"><br><a id="more"></a></p>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><ol>
<li>用TAB键起始的段落</li>
<li>用\<figure class="highlight plain"><figcaption><span>包裹代码快\```）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">3. 用4个空格开头</span><br><span class="line"></span><br><span class="line">列如：</span><br><span class="line">    </span><br><span class="line">    ```java</span><br><span class="line">    public void test()&#123;</span><br><span class="line">        System.out.print(&quot;hello world!&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>效果：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.print(<span class="string">"hello world!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="行内引用"><a href="#行内引用" class="headerlink" title="行内引用"></a>行内引用</h3><p>如果在一个行内需要引用代码，只要用反引号`引起来就好</p>
<blockquote>
<p>如果在一个行内需要引用代码，只要用`反引号`引起来就好</p>
</blockquote>
<p>如果在一个行内需要引用代码，只要用<code>反引号</code>引起来就好</p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><blockquote>
<p>-–<br><br>***<br><br>___<br></p>
</blockquote>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><hr>
<h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><pre><code>~~删除我吧~~
</code></pre><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p><del>删除我吧</del></p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>> 引用</p>
</blockquote>
<h3 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h3><blockquote>
<p>引用</p>
</blockquote>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>
<h3 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h3><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表</span><br><span class="line">- 无序列表</span><br><span class="line">- 无序列表</span><br><span class="line">- 无序列表：</span><br></pre></td></tr></table></figure></p>
<h3 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h3><ul>
<li>无序列表</li>
<li>无序列表</li>
<li>无序列表</li>
<li>无序列表：</li>
</ul>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表</span><br><span class="line">2. 有序列表</span><br><span class="line">3. 有序列表</span><br></pre></td></tr></table></figure>
<h4 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h4><ol>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表</li>
</ol>
<h3 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 嵌套列表1</span><br><span class="line">    + 嵌套列表2</span><br><span class="line">    + 嵌套列表3</span><br><span class="line">        - 嵌套列表4</span><br><span class="line">         * 嵌套列表5</span><br><span class="line">- 嵌套列表6</span><br></pre></td></tr></table></figure>
<h4 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h4><ul>
<li>嵌套列表1<ul>
<li>嵌套列表2</li>
<li>嵌套列表3<ul>
<li>嵌套列表4<ul>
<li>嵌套列表5</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>嵌套列表6</li>
</ul>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>可以使用冒号来定义表格的对齐方式，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure>
<h3 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h3><table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="文字链接"><a href="#文字链接" class="headerlink" title="文字链接"></a>文字链接</h3><pre><code>[HuiGer的博客](http://huiger.top &quot;HuiGer的博客&quot;)
</code></pre><p><a href="http://huiger.top" title="HuiGer的博客">HuiGer的博客</a></p>
<h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><p>多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记</p>
<pre><code>![Baidu](https://www.baidu.com/img/bd_logo1.png &quot;Baidu&quot;)
</code></pre><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="Baidu" title="Baidu"></p>
<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>和java中的相似，只要在需要显示原字符的前面加\， 如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\\ 反斜杠</span><br><span class="line"></span><br><span class="line">\` 反引号</span><br><span class="line"></span><br><span class="line">\* 星号</span><br><span class="line"></span><br><span class="line">\_ 下划线</span><br><span class="line"></span><br><span class="line">\&#123;\&#125; 大括号</span><br><span class="line"></span><br><span class="line">\[\] 中括号</span><br><span class="line"></span><br><span class="line">\(\) 小括号</span><br><span class="line">等</span><br></pre></td></tr></table></figure>
<p>\ 反斜杠</p>
<p>` 反引号</p>
<p>* 星号</p>
<p>_ 下划线</p>
<p>{} 大括号</p>
<p>[] 中括号</p>
<p>() 小括号</p>
<h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><p>在需要添加注脚的文字后面加上注脚名字[^注脚名字], 称为加注.<br>然后再文本任意位置(一般在最后)添加脚注, 脚注前必须有对应的脚注名字.</p>
<p>注：</p>
<ol>
<li>脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。</li>
<li>由于简书不支持锚点，所以可以用注脚实现页面内部的跳转。</li>
</ol>
<h2 id="制作待办事项To-do-List"><a href="#制作待办事项To-do-List" class="headerlink" title="制作待办事项To-do List"></a>制作待办事项To-do List</h2><p><img src="http://zhihui123.gitee.io/pic/1-2%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9.png" alt="To-do List"></p>
<h2 id="高效绘制-流程图、序列图、甘特图、表格"><a href="#高效绘制-流程图、序列图、甘特图、表格" class="headerlink" title="高效绘制 流程图、序列图、甘特图、表格"></a>高效绘制 流程图、序列图、甘特图、表格</h2><h3 id="流程图："><a href="#流程图：" class="headerlink" title="流程图："></a>流程图：</h3><p><img src="http://zhihui123.gitee.io/pic/%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="流程图"></p>
<h3 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h3><p><img src="http://zhihui123.gitee.io/pic/%E5%BA%8F%E5%88%97%E5%9B%BE.png" alt="序列图"></p>
<h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><p><img src="http://zhihui123.gitee.io/pic/%E7%94%98%E7%89%B9%E5%9B%BE.png" alt="甘特图"></p>
<h3 id="书写数学公式"><a href="#书写数学公式" class="headerlink" title="书写数学公式"></a>书写数学公式</h3><p><img src="http://zhihui123.gitee.io/pic/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F.png" alt="书写数学公式"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://zhihui123.gitee.io/pic/markdown.png&quot; alt=&quot;MarkDown&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://huiger.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="markdown" scheme="http://huiger.top/tags/markdown/"/>
    
      <category term="教程" scheme="http://huiger.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>android App内监听截图加二维码</title>
    <link href="http://huiger.top/2016/08/03/android-App%E5%86%85%E7%9B%91%E5%90%AC%E6%88%AA%E5%9B%BE%E5%8A%A0%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <id>http://huiger.top/2016/08/03/android-App内监听截图加二维码/</id>
    <published>2016-08-03T02:16:42.000Z</published>
    <updated>2019-01-24T16:01:45.673Z</updated>
    
    <content type="html"><![CDATA[<p>Android截屏功能是一个常用的功能，可以方便的用来分享或者发送给好友，本文介绍了如何实现app内截屏监控功能，当发现用户在我们的app内进行了截屏操作时，进行对图片的二次操作，例如添加二维码，公司logo等一系列***。</p>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><a href="https://github.com/huiger/ScreenShotDemo" target="_blank" rel="noopener">项目地址</a></h2><h2 id="测试截图："><a href="#测试截图：" class="headerlink" title="测试截图："></a>测试截图：</h2><p><img src="/img/ScreenShot.gif" alt="image"></p>
<a id="more"></a>
<h2 id="截屏原理"><a href="#截屏原理" class="headerlink" title="截屏原理"></a>截屏原理</h2><p>Android系统并没有提供截屏通知相关的API，需要我们自己利用系统能提供的相关特性变通实现。Android系统有一个媒体数据库，每拍一张照片，或使用系统截屏截取一张图片，都会把这张图片的详细信息加入到这个媒体数据库，并发出内容改变通知，我们可以利用内容观察者（ContentObserver）监听媒体数据库的变化，当数据库有变化时，获取最后插入的一条图片数据，如果该图片符合特定的规则，则认为被截屏了。</p>
<h2 id="判断依据"><a href="#判断依据" class="headerlink" title="判断依据"></a>判断依据</h2><p>当ContentObserver监听到媒体数据库的数据改变, 在有数据改变时 获取最后插入数据库的一条图片数据, 如果符合以下规则, 则认为截屏了:</p>
<ol>
<li>时间判断，图片的生成时间在开始监听之后,并与当前时间相隔10秒内：开始监听后生成的图片才有意义，相隔10秒内说明是刚刚生成的</li>
<li>尺寸判断，图片的尺寸没有超过屏幕的尺寸：图片尺寸超过屏幕尺寸，不可能是截屏图片</li>
<li>路径判断，图片路径符合包含特定的关键词：这一点是关键，截屏图片的保存路径通常包含“screenshot”</li>
</ol>
<p>这些判断是为了增加截屏检测结果的可靠性，防止误报，防止遗漏。其中截屏图片的路径正常Android系统保存的路径格式， 例如我的是：“外部存储器/storage/emulated/0/Pictures/Screenshots/Screenshot_2017-08-03-15-42-58.png”，但Android系统碎片化严重，加上其他第三方截屏APP等，所以路径关键字除了检查是否包含“screenshot”外，还可以适当增加其他关键字，详见最后的监听器完整代码。这种监听截屏的方法也不是100%准确，例如某些被root的机器使用第三方截屏APP自定义保存路径，还比如通过ADB命令在电脑上获取手机屏幕快照均不能监听到，但这也是目前可行性最高的方法，对于绝大多数用户都比较靠谱。</p>
<h2 id="代码描述"><a href="#代码描述" class="headerlink" title="代码描述"></a>代码描述</h2><h3 id="监听截屏"><a href="#监听截屏" class="headerlink" title="监听截屏"></a>监听截屏</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScreenShotListenManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"ScreenShotListenManager"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取媒体数据库时需要读取的列</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] MEDIA_PROJECTIONS = &#123;</span><br><span class="line">            MediaStore.Images.ImageColumns.DATA,</span><br><span class="line">            MediaStore.Images.ImageColumns.DATE_TAKEN,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取媒体数据库时需要读取的列, 其中 WIDTH 和 HEIGHT 字段在 API 16 以后才有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] MEDIA_PROJECTIONS_API_16 = &#123;</span><br><span class="line">            MediaStore.Images.ImageColumns.DATA,</span><br><span class="line">            MediaStore.Images.ImageColumns.DATE_TAKEN,</span><br><span class="line">            MediaStore.Images.ImageColumns.WIDTH,</span><br><span class="line">            MediaStore.Images.ImageColumns.HEIGHT,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截屏依据中的路径判断关键字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] KEYWORDS = &#123;</span><br><span class="line">            <span class="string">"screenshot"</span>, <span class="string">"screen_shot"</span>, <span class="string">"screen-shot"</span>, <span class="string">"screen shot"</span>,</span><br><span class="line">            <span class="string">"screencapture"</span>, <span class="string">"screen_capture"</span>, <span class="string">"screen-capture"</span>, <span class="string">"screen capture"</span>,</span><br><span class="line">            <span class="string">"screencap"</span>, <span class="string">"screen_cap"</span>, <span class="string">"screen-cap"</span>, <span class="string">"screen cap"</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Point sScreenRealSize;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已回调过的路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> List&lt;String&gt; sHasCallbackPaths = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnScreenShotListener mListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mStartListenTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内部存储器内容观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> MediaContentObserver mInternalObserver;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 外部存储器内容观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> MediaContentObserver mExternalObserver;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 运行在 UI 线程的 Handler, 用于运行监听器回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Handler mUiHandler = <span class="keyword">new</span> Handler(Looper.getMainLooper());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ScreenShotListenManager</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (context == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The context must not be null."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mContext = context;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取屏幕真实的分辨率</span></span><br><span class="line">        <span class="keyword">if</span> (sScreenRealSize == <span class="keyword">null</span>) &#123;</span><br><span class="line">            sScreenRealSize = getRealScreenSize();</span><br><span class="line">            <span class="keyword">if</span> (sScreenRealSize != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Log.d(TAG, <span class="string">"Screen Real Size: "</span> + sScreenRealSize.x + <span class="string">" * "</span> + sScreenRealSize.y);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Log.w(TAG, <span class="string">"Get screen real size failed."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ScreenShotListenManager <span class="title">newInstance</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        assertInMainThread();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ScreenShotListenManager(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动监听</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startListen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        assertInMainThread();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        sHasCallbackPaths.clear();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录开始监听的时间戳</span></span><br><span class="line">        mStartListenTime = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建内容观察者</span></span><br><span class="line">        mInternalObserver = <span class="keyword">new</span> MediaContentObserver(MediaStore.Images.Media.INTERNAL_CONTENT_URI, mUiHandler);</span><br><span class="line">        mExternalObserver = <span class="keyword">new</span> MediaContentObserver(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, mUiHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册内容观察者</span></span><br><span class="line">        mContext.getContentResolver().registerContentObserver(</span><br><span class="line">                MediaStore.Images.Media.INTERNAL_CONTENT_URI,</span><br><span class="line">                <span class="keyword">false</span>,</span><br><span class="line">                mInternalObserver</span><br><span class="line">        );</span><br><span class="line">        mContext.getContentResolver().registerContentObserver(</span><br><span class="line">                MediaStore.Images.Media.EXTERNAL_CONTENT_URI,</span><br><span class="line">                <span class="keyword">false</span>,</span><br><span class="line">                mExternalObserver</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 停止监听</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopListen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        assertInMainThread();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注销内容观察者</span></span><br><span class="line">        <span class="keyword">if</span> (mInternalObserver != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mContext.getContentResolver().unregisterContentObserver(mInternalObserver);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            mInternalObserver = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mExternalObserver != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mContext.getContentResolver().unregisterContentObserver(mExternalObserver);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            mExternalObserver = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清空数据</span></span><br><span class="line">        mStartListenTime = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//        sHasCallbackPaths.clear();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//切记！！！:必须设置为空 可能mListener 会隐式持有Activity导致释放不掉</span></span><br><span class="line">        mListener = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理媒体数据库的内容改变</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleMediaContentChange</span><span class="params">(Uri contentUri)</span> </span>&#123;</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 数据改变时查询数据库中最后加入的一条数据</span></span><br><span class="line">            cursor = mContext.getContentResolver().query(</span><br><span class="line">                    contentUri,</span><br><span class="line">                    Build.VERSION.SDK_INT &lt; <span class="number">16</span> ? MEDIA_PROJECTIONS : MEDIA_PROJECTIONS_API_16,</span><br><span class="line">                    <span class="keyword">null</span>,</span><br><span class="line">                    <span class="keyword">null</span>,</span><br><span class="line">                    MediaStore.Images.ImageColumns.DATE_ADDED + <span class="string">" desc limit 1"</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cursor == <span class="keyword">null</span>) &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">"Deviant logic."</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!cursor.moveToFirst()) &#123;</span><br><span class="line">                Log.d(TAG, <span class="string">"Cursor no data."</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取各列的索引</span></span><br><span class="line">            <span class="keyword">int</span> dataIndex = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);</span><br><span class="line">            <span class="keyword">int</span> dateTakenIndex = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATE_TAKEN);</span><br><span class="line">            <span class="keyword">int</span> widthIndex = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> heightIndex = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">16</span>) &#123;</span><br><span class="line">                widthIndex = cursor.getColumnIndex(MediaStore.Images.ImageColumns.WIDTH);</span><br><span class="line">                heightIndex = cursor.getColumnIndex(MediaStore.Images.ImageColumns.HEIGHT);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取行数据</span></span><br><span class="line">            String data = cursor.getString(dataIndex);</span><br><span class="line">            <span class="keyword">long</span> dateTaken = cursor.getLong(dateTakenIndex);</span><br><span class="line">            <span class="keyword">int</span> width = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> height = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (widthIndex &gt;= <span class="number">0</span> &amp;&amp; heightIndex &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                width = cursor.getInt(widthIndex);</span><br><span class="line">                height = cursor.getInt(heightIndex);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// API 16 之前, 宽高要手动获取</span></span><br><span class="line">                Point size = getImageSize(data);</span><br><span class="line">                width = size.x;</span><br><span class="line">                height = size.y;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理获取到的第一行数据</span></span><br><span class="line">            handleMediaRowData(data, dateTaken, width, height);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span> &amp;&amp; !cursor.isClosed()) &#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Point <span class="title">getImageSize</span><span class="params">(String imagePath)</span> </span>&#123;</span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">        BitmapFactory.decodeFile(imagePath, options);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(options.outWidth, options.outHeight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理获取到的一行数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleMediaRowData</span><span class="params">(String data, <span class="keyword">long</span> dateTaken, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (checkScreenShot(data, dateTaken, width, height)) &#123;</span><br><span class="line">            Log.d(TAG, <span class="string">"ScreenShot: path = "</span> + data + <span class="string">"; size = "</span> + width + <span class="string">" * "</span> + height</span><br><span class="line">                    + <span class="string">"; date = "</span> + dateTaken);</span><br><span class="line">            <span class="keyword">if</span> (mListener != <span class="keyword">null</span> &amp;&amp; !checkCallback(data)) &#123;</span><br><span class="line">                mListener.onShot(data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果在观察区间媒体数据库有数据改变，又不符合截屏规则，则输出到 log 待分析</span></span><br><span class="line">            Log.w(TAG, <span class="string">"Media content changed, but not screenshot: path = "</span> + data</span><br><span class="line">                    + <span class="string">"; size = "</span> + width + <span class="string">" * "</span> + height + <span class="string">"; date = "</span> + dateTaken);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断指定的数据行是否符合截屏条件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkScreenShot</span><span class="params">(String data, <span class="keyword">long</span> dateTaken, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 判断依据一: 时间判断</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// 如果加入数据库的时间在开始监听之前, 或者与当前时间相差大于10秒, 则认为当前没有截屏</span></span><br><span class="line">        <span class="keyword">if</span> (dateTaken &lt; mStartListenTime || (System.currentTimeMillis() - dateTaken) &gt; <span class="number">10</span> * <span class="number">1000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 判断依据二: 尺寸判断</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (sScreenRealSize != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果图片尺寸超出屏幕, 则认为当前没有截屏</span></span><br><span class="line">            <span class="keyword">if</span> (!((width &lt;= sScreenRealSize.x &amp;&amp; height &lt;= sScreenRealSize.y)</span><br><span class="line">                    || (height &lt;= sScreenRealSize.x &amp;&amp; width &lt;= sScreenRealSize.y))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 判断依据三: 路径判断</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        data = data.toLowerCase();</span><br><span class="line">        <span class="comment">// 判断图片路径是否含有指定的关键字之一, 如果有, 则认为当前截屏了</span></span><br><span class="line">        <span class="keyword">for</span> (String keyWork : KEYWORDS) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.contains(keyWork)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否已回调过, 某些手机ROM截屏一次会发出多次内容改变的通知; &lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 删除一个图片也会发通知, 同时防止删除图片时误将上一张符合截屏规则的图片当做是当前截屏.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkCallback</span><span class="params">(String imagePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sHasCallbackPaths.contains(imagePath)) &#123;</span><br><span class="line">            Log.d(TAG, <span class="string">"ScreenShot: imgPath has done"</span></span><br><span class="line">                    + <span class="string">"; imagePath = "</span> + imagePath);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 大概缓存15~20条记录便可</span></span><br><span class="line">        <span class="keyword">if</span> (sHasCallbackPaths.size() &gt;= <span class="number">20</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                sHasCallbackPaths.remove(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sHasCallbackPaths.add(imagePath);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取屏幕分辨率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Point <span class="title">getRealScreenSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Point screenSize = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            screenSize = <span class="keyword">new</span> Point();</span><br><span class="line">            WindowManager windowManager = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line">            Display defaultDisplay = windowManager.getDefaultDisplay();</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN_MR1) &#123;</span><br><span class="line">                defaultDisplay.getRealSize(screenSize);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Method mGetRawW = Display.class.getMethod(<span class="string">"getRawWidth"</span>);</span><br><span class="line">                    Method mGetRawH = Display.class.getMethod(<span class="string">"getRawHeight"</span>);</span><br><span class="line">                    screenSize.set(</span><br><span class="line">                            (Integer) mGetRawW.invoke(defaultDisplay),</span><br><span class="line">                            (Integer) mGetRawH.invoke(defaultDisplay)</span><br><span class="line">                    );</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    screenSize.set(defaultDisplay.getWidth(), defaultDisplay.getHeight());</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> screenSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Bitmap <span class="title">createScreenShotBitmap</span><span class="params">(Context context, String screenFilePath)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        View v = LayoutInflater.from(context).inflate(R.layout.share_screenshot_layout, <span class="keyword">null</span>);</span><br><span class="line">        ImageView iv = (ImageView) v.findViewById(R.id.iv);</span><br><span class="line">        Bitmap bitmap = BitmapFactory.decodeFile(screenFilePath);</span><br><span class="line">        iv.setImageBitmap(bitmap);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//整体布局</span></span><br><span class="line">        Point point = getRealScreenSize();</span><br><span class="line">        v.measure(View.MeasureSpec.makeMeasureSpec(point.x, View.MeasureSpec.EXACTLY),</span><br><span class="line">                View.MeasureSpec.makeMeasureSpec(point.y, View.MeasureSpec.EXACTLY));</span><br><span class="line"></span><br><span class="line">        v.layout(<span class="number">0</span>, <span class="number">0</span>, point.x, point.y);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        Bitmap result = Bitmap.createBitmap(v.getWidth(), v.getHeight(), Bitmap.Config.RGB_565);</span></span><br><span class="line">        Bitmap result = Bitmap.createBitmap(v.getWidth(), v.getHeight() + dp2px(context, <span class="number">140</span>), Bitmap.Config.ARGB_8888);</span><br><span class="line">        Canvas c = <span class="keyword">new</span> Canvas(result);</span><br><span class="line">        c.drawColor(Color.WHITE);</span><br><span class="line">        <span class="comment">// Draw view to canvas</span></span><br><span class="line">        v.draw(c);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">dp2px</span><span class="params">(Context ctx, <span class="keyword">float</span> dp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> scale = ctx.getResources().getDisplayMetrics().density;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (dp * scale + <span class="number">0.5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置截屏监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setListener</span><span class="params">(OnScreenShotListener listener)</span> </span>&#123;</span><br><span class="line">        mListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnScreenShotListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onShot</span><span class="params">(String imagePath)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">assertInMainThread</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Looper.myLooper() != Looper.getMainLooper()) &#123;</span><br><span class="line">            StackTraceElement[] elements = Thread.currentThread().getStackTrace();</span><br><span class="line">            String methodMsg = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (elements != <span class="keyword">null</span> &amp;&amp; elements.length &gt;= <span class="number">4</span>) &#123;</span><br><span class="line">                methodMsg = elements[<span class="number">3</span>].toString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Call the method must be in main thread: "</span> + methodMsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 媒体内容观察者(观察媒体数据库的改变)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MediaContentObserver</span> <span class="keyword">extends</span> <span class="title">ContentObserver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Uri mContentUri;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MediaContentObserver</span><span class="params">(Uri contentUri, Handler handler)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(handler);</span><br><span class="line">            mContentUri = contentUri;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChange</span><span class="params">(<span class="keyword">boolean</span> selfChange)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onChange(selfChange);</span><br><span class="line">            handleMediaContentChange(mContentUri);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="全局使用"><a href="#全局使用" class="headerlink" title="全局使用"></a>全局使用</h3><p>我们需求是要在APP中全局都能监听截屏操作，所以，我们只需要在BaseActivity中进行监听就可以了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">    startScreenShotListen();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onPause();</span><br><span class="line">    stopScreenShotListen();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startScreenShotListen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isHasScreenShotListener &amp;&amp; screenShotListenManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">        screenShotListenManager.setListener(<span class="keyword">new</span> ScreenShotListenManager.OnScreenShotListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShot</span><span class="params">(String imagePath)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                path = imagePath;</span><br><span class="line">                Log.d(<span class="string">"msg"</span>, <span class="string">"BaseActivity -&gt; onShot: "</span> + <span class="string">"获得截图路径："</span> + imagePath);</span><br><span class="line"></span><br><span class="line">                MyDialog ksDialog = MyDialog.getInstance()</span><br><span class="line">                        .init(BaseActivity.<span class="keyword">this</span>, R.layout.dialog_layout)</span><br><span class="line">                        .setCancelButton(<span class="string">"取消"</span>, <span class="keyword">null</span>)</span><br><span class="line">                        .setPositiveButton(<span class="string">"查看"</span>, <span class="keyword">new</span> MyDialog.OnClickListener() &#123;</span><br><span class="line">                            <span class="meta">@Override</span></span><br><span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                                Bitmap screenShotBitmap = screenShotListenManager.createScreenShotBitmap(mContext, path);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// 此处只要分享这个合成的Bitmap图片就行了</span></span><br><span class="line">                                <span class="comment">// 为了演示，故写下面代码</span></span><br><span class="line">                                screenShotIv.setImageBitmap(screenShotBitmap);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                screenShotIv = (ImageView) ksDialog.getView(R.id.iv);</span><br><span class="line">                progressBar = (ProgressBar) ksDialog.getView(R.id.avLoad);</span><br><span class="line">                mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        progressBar.setVisibility(View.GONE);</span><br><span class="line">                        Glide.with(mContext).load(path).into(screenShotIv);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">1500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        screenShotListenManager.startListen();</span><br><span class="line">        isHasScreenShotListener = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 停止监听</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">stopScreenShotListen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isHasScreenShotListener &amp;&amp; screenShotListenManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">        screenShotListenManager.stopListen();</span><br><span class="line">        isHasScreenShotListener = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>至此APP内监听截屏操作就完成了，我们需要在baseActivity中执行监听并执行相应操作，不需要写更多代码。</p>
<h2 id="项目地址-gt-gt"><a href="#项目地址-gt-gt" class="headerlink" title="项目地址&gt;&gt;"></a><a href="https://github.com/huiger/ScreenShotDemo" target="_blank" rel="noopener">项目地址&gt;&gt;</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android截屏功能是一个常用的功能，可以方便的用来分享或者发送给好友，本文介绍了如何实现app内截屏监控功能，当发现用户在我们的app内进行了截屏操作时，进行对图片的二次操作，例如添加二维码，公司logo等一系列***。&lt;/p&gt;
&lt;h2 id=&quot;项目地址&quot;&gt;&lt;a href=&quot;#项目地址&quot; class=&quot;headerlink&quot; title=&quot;项目地址&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/huiger/ScreenShotDemo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;测试截图：&quot;&gt;&lt;a href=&quot;#测试截图：&quot; class=&quot;headerlink&quot; title=&quot;测试截图：&quot;&gt;&lt;/a&gt;测试截图：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/ScreenShot.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="开发经验" scheme="http://huiger.top/categories/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="二维码" scheme="http://huiger.top/tags/%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    
      <category term="截图" scheme="http://huiger.top/tags/%E6%88%AA%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>gradlew常用命令</title>
    <link href="http://huiger.top/2016/06/02/gradlew%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://huiger.top/2016/06/02/gradlew常用命令/</id>
    <published>2016-06-02T03:41:26.000Z</published>
    <updated>2019-01-24T16:01:45.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gradlew常用命令"><a href="#gradlew常用命令" class="headerlink" title="gradlew常用命令"></a>gradlew常用命令</h2><ul>
<li><strong>gradlew -v </strong> 版本号</li>
<li><strong>gradlew clean</strong> 清除工程目录下的build文件夹</li>
<li><strong>gradlew build</strong> 检查依赖并编译打包</li>
</ul>
<p>这里注意的是 <strong>gradlew build</strong> 命令把<strong>debug</strong>、<strong>release</strong>环境的包都打出来，如果正式发布只需要打<strong>Release</strong>的包，该怎么办呢，下面介绍一个很有用的命令 <strong>assemble</strong>, 如</p>
<ul>
<li><strong>gradlew assembleDebug</strong> 编译并打Debug包</li>
<li><strong>gradlew assembleRelease</strong> 编译并打Release的包</li>
</ul>
<p>还有打渠道包，如百度</p>
<ul>
<li><strong>gradlew assembleBaiduRelease</strong> 编译并打Release的百度包</li>
</ul>
<p>除此之外，assemble还可以和productFlavors结合使用,比如定义了 installRelease ，uninstallRelease 两个productFlavors，则可以如下命令：</p>
<ul>
<li><strong>gradlew installRelease Release</strong> 模式打包并安装</li>
<li><strong>gradlew uninstallRelease</strong> 卸载Release模式包</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;gradlew常用命令&quot;&gt;&lt;a href=&quot;#gradlew常用命令&quot; class=&quot;headerlink&quot; title=&quot;gradlew常用命令&quot;&gt;&lt;/a&gt;gradlew常用命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gradlew -v &lt;/strong&gt;
    
    </summary>
    
      <category term="开发经验" scheme="http://huiger.top/categories/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="gradlew" scheme="http://huiger.top/tags/gradlew/"/>
    
      <category term="Android Studio" scheme="http://huiger.top/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 简单命令发布博客</title>
    <link href="http://huiger.top/2016/05/13/hexo-%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/"/>
    <id>http://huiger.top/2016/05/13/hexo-简单命令发布博客/</id>
    <published>2016-05-13T03:23:59.000Z</published>
    <updated>2019-01-24T16:01:45.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h2><p>hexo简单命令 让发布文章不再复杂<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt; #初始化一个网站目录 我是直接cd到目标目录执行hexo init的</span><br><span class="line">hexo new &quot;postName&quot; #新建文章，或者source\_posts手动编辑</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面 默认链接为:主页地址/pageName/</span><br><span class="line">hexo clean #清除缓存文件db.json和已生成的静态文件public</span><br><span class="line">hexo generate #生成public静态文件至public目录</span><br><span class="line">hexo server #本地发布预览效果 http://localhost:4000 (&apos;ctrl + c&apos;关闭server)</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line">hexo --debug #在终端中显示调试信息并记录到 `debug.log`</span><br><span class="line">hexo help #查看帮助</span><br><span class="line">hexo version #查看Hexo的版本</span><br></pre></td></tr></table></figure>
<h2 id="Hexo简写命令"><a href="#Hexo简写命令" class="headerlink" title="Hexo简写命令"></a>Hexo简写命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;postName&quot; #新建文章，或者source\_posts手动编辑</span><br><span class="line">hexo g #生成public静态文件至public目录</span><br><span class="line">hexo s #本地发布预览效果 http://localhost:4000 (&apos;ctrl + c&apos;关闭server)</span><br><span class="line">hexo d #将.deploy目录部署到GitHub</span><br></pre></td></tr></table></figure>
<h2 id="Hexo复合命令"><a href="#Hexo复合命令" class="headerlink" title="Hexo复合命令"></a>Hexo复合命令</h2><p>使用下面的命令将使你更便捷、高效的写文章。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g #生成并部署上传</span><br><span class="line">hexo s -g #生成并本地发布预览</span><br><span class="line">hexo clean &amp;&amp; hexo d -g #清空缓存然后生成并部署上传</span><br><span class="line">hexo clean &amp;&amp; hexo s -g #清空缓存然后生成并本地发布预览</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo命令&quot;&gt;&lt;a href=&quot;#Hexo命令&quot; class=&quot;headerlink&quot; title=&quot;Hexo命令&quot;&gt;&lt;/a&gt;Hexo命令&lt;/h2&gt;&lt;p&gt;hexo简单命令 让发布文章不再复杂&lt;br&gt;
    
    </summary>
    
      <category term="开发经验" scheme="http://huiger.top/categories/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="hexo" scheme="http://huiger.top/tags/hexo/"/>
    
      <category term="博客" scheme="http://huiger.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
